#include <stdint.h>
#ifdef __SDCC
volatile __data __at (0xc) uint8_t PIR1;
volatile __data __at (0xd) uint8_t PIR2;
volatile __data __at (0x98) uint8_t TXSTA;
volatile __data __at (0x14) uint8_t SSPCON;
volatile __data __at (0xe) uint8_t TMR1L;
volatile __data __at (0xf) uint8_t TMR1H;
volatile __data __at (0x10) uint8_t TMR1CON;
volatile __data __at (0x5) uint8_t PORTA;
volatile __data __at (0x85) uint8_t TRISA;
volatile __data __at (0x6) uint8_t PORTB;
volatile __data __at (0x86) uint8_t TRISB;
volatile __data __at (0x7) uint8_t PORTC;
volatile __data __at (0x87) uint8_t TRISC;
volatile __data __at (0x9) uint8_t PORTE;
volatile __data __at (0x89) uint8_t TRISE;
#else
#define PIR1 (*(uint8_t*)0xc)
#define PIR2 (*(uint8_t*)0xd)
#define TXSTA (*(uint8_t*)0x98)
#define SSPCON (*(uint8_t*)0x14)
#define TMR1L (*(uint8_t*)0xe)
#define TMR1H (*(uint8_t*)0xf)
#define TMR1CON (*(uint8_t*)0x10)
#define PORTA (*(uint8_t*)0x5)
#define TRISA (*(uint8_t*)0x85)
#define PORTB (*(uint8_t*)0x6)
#define TRISB (*(uint8_t*)0x86)
#define PORTC (*(uint8_t*)0x7)
#define TRISC (*(uint8_t*)0x87)
#define PORTE (*(uint8_t*)0x9)
#define TRISE (*(uint8_t*)0x89)
#endif
#define READ_t1ginv (T1CON & 1)
#define SET_t1ginv (T1CON |= 1)
#define CLEAR_t1ginv (T1CON &= ~(1))
#define READ_tmr1ge (T1CON & 2)
#define SET_tmr1ge (T1CON |= 2)
#define CLEAR_tmr1ge (T1CON &= ~(2))
#define READ_t1ckps1 (T1CON & 4)
#define SET_t1ckps1 (T1CON |= 4)
#define CLEAR_t1ckps1 (T1CON &= ~(4))
#define READ_t1ckps0 (T1CON & 8)
#define SET_t1ckps0 (T1CON |= 8)
#define CLEAR_t1ckps0 (T1CON &= ~(8))
#define READ_t1oscen (T1CON & 16)
#define SET_t1oscen (T1CON |= 16)
#define CLEAR_t1oscen (T1CON &= ~(16))
#define READ_t1sync (T1CON & 32)
#define SET_t1sync (T1CON |= 32)
#define CLEAR_t1sync (T1CON &= ~(32))
#define READ_tmr1cs (T1CON & 64)
#define SET_tmr1cs (T1CON |= 64)
#define CLEAR_tmr1cs (T1CON &= ~(64))
#define READ_tmr1on (T1CON & 128)
#define SET_tmr1on (T1CON |= 128)
#define CLEAR_tmr1on (T1CON &= ~(128))
#define READ_csrc (TXSTA & 1)
#define SET_csrc (TXSTA |= 1)
#define CLEAR_csrc (TXSTA &= ~(1))
#define READ_tx9 (TXSTA & 2)
#define SET_tx9 (TXSTA |= 2)
#define CLEAR_tx9 (TXSTA &= ~(2))
#define READ_txen (TXSTA & 4)
#define SET_txen (TXSTA |= 4)
#define CLEAR_txen (TXSTA &= ~(4))
#define READ_sync (TXSTA & 8)
#define SET_sync (TXSTA |= 8)
#define CLEAR_sync (TXSTA &= ~(8))
#define READ_sendb (TXSTA & 16)
#define SET_sendb (TXSTA |= 16)
#define CLEAR_sendb (TXSTA &= ~(16))
#define READ_brgh (TXSTA & 32)
#define SET_brgh (TXSTA |= 32)
#define CLEAR_brgh (TXSTA &= ~(32))
#define READ_trmt (TXSTA & 64)
#define SET_trmt (TXSTA |= 64)
#define CLEAR_trmt (TXSTA &= ~(64))
#define READ_tx9d (TXSTA & 128)
#define SET_tx9d (TXSTA |= 128)
#define CLEAR_tx9d (TXSTA &= ~(128))
#define READ_wcol (SSPCON & 1)
#define SET_wcol (SSPCON |= 1)
#define CLEAR_wcol (SSPCON &= ~(1))
#define READ_sspov (SSPCON & 2)
#define SET_sspov (SSPCON |= 2)
#define CLEAR_sspov (SSPCON &= ~(2))
#define READ_sspen (SSPCON & 4)
#define SET_sspen (SSPCON |= 4)
#define CLEAR_sspen (SSPCON &= ~(4))
#define READ_ckp (SSPCON & 8)
#define SET_ckp (SSPCON |= 8)
#define CLEAR_ckp (SSPCON &= ~(8))
#define READ_sspm3 (SSPCON & 16)
#define SET_sspm3 (SSPCON |= 16)
#define CLEAR_sspm3 (SSPCON &= ~(16))
#define READ_sspm2 (SSPCON & 32)
#define SET_sspm2 (SSPCON |= 32)
#define CLEAR_sspm2 (SSPCON &= ~(32))
#define READ_sspm1 (SSPCON & 64)
#define SET_sspm1 (SSPCON |= 64)
#define CLEAR_sspm1 (SSPCON &= ~(64))
#define READ_sspm0 (SSPCON & 128)
#define SET_sspm0 (SSPCON |= 128)
#define CLEAR_sspm0 (SSPCON &= ~(128))
#define TMR1_U16 ((TMR1H << 8) | TMR1L)
#define enable_tmr1_interrupt() (PIE1 &= ~(1ULL << 0))
#define clear_tmr1_interrupt() (PIR1 &= ~(1ULL << 0))
#define check_tmr1_interrupt() (PIR1 & (1ULL << 0))
#define enable_tmr2_interrupt() (PIE1 &= ~(1ULL << 1))
#define clear_tmr2_interrupt() (PIR1 &= ~(1ULL << 1))
#define check_tmr2_interrupt() (PIR1 & (1ULL << 1))
#define enable_ccp1_interrupt() (PIE1 &= ~(1ULL << 2))
#define clear_ccp1_interrupt() (PIR1 &= ~(1ULL << 2))
#define check_ccp1_interrupt() (PIR1 & (1ULL << 2))
